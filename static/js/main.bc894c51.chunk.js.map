{"version":3,"sources":["types/styledTypes.ts","reportWebVitals.js","components/API.ts","styles/theme.ts","components/REDUX.ts","styles/components.ts","components/assets/SVG.tsx","components/Header.tsx","components/Portfolio/Pie.tsx","components/Portfolio/SmallPie.tsx","components/Portfolio/Portfolio.tsx","components/Converter/Chart.tsx","components/Converter/AmountForm.tsx","components/assets/bitcoin.svg","components/assets/icons.ts","components/assets/dollar.svg","components/Converter/SelectUnit.tsx","components/Converter/ConverterUnit.tsx","components/Converter/Converter.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["ThemeEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API","id","idVs","get","res","data","baseTheme","colors","primary","secondary","success","danger","bg","font","media","lg","md","sm","xs","lightTheme","type","light","darkTheme","dark","initialState","amount1","amount2","value","historyBTCValues","historyETHValues","newHistoryValues","usd","theme","actions","amount","store","createStore","state","action","insert","arr","index","newItem","slice","market_data","current_price","valuesOf","isLightTheme","compose","applyMiddleware","thunkMiddleware","container","css","paper","Container","styled","div","props","SecondaryText","p","Content","Section","Aside","ChartContainer","Button","button","Link","a","Icon","img","IconFont","SVG","d","d2","paths","xmlns","width","height","Path","fill","length","path","Header","useSelector","dispatch","useDispatch","SideBar","SideBarItem","onClick","to","ChartJS","register","ArcElement","Tooltip","Legend","labels","datasets","label","backgroundColor","borderColor","borderWidth","PieChart","SmallPie","Portfolio","React","memo","name","color1","color2","CoinItem","CoinItemS","CategoryScale","LinearScale","PointElement","LineElement","Title","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","y","position","y1","grid","drawOnChartArea","thisDay","Date","today","parse","day","months","map","m","getDate","getMonth","Chart","yAxisID","AmountForm","initialValues","onSubmit","values","setSubmitting","changeAmount","isSubmitting","disabled","icons","btc","SelectUnit","ConverterUnit","useState","isOptionsVisible","setOptionsVisible","rate","src","icon","alt","Converter","useEffect","getPrice","Object","bitcoin","ethereum","dollar","icon1","icon2","createGlobalStyle","App","getState","AppWrapper","Wrapper","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc894c51.chunk.js","sourcesContent":["export enum ThemeEnum {\n    light = 'light',\n    dark = 'dark'\n}\n\nexport type ThemeType = {\n    font: string\n    bg: string\n}\n\nexport interface ThemeI {\n    colors: {\n        primary: string\n        secondary: string\n        success: string\n        danger: string\n\n        bg: string\n        font: string\n    }\n    media: {\n        lg: string\n        md: string\n        sm: string\n        xs: string\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: `https://api.coingecko.com/api/v3/`\n})\n\nexport type GetPriceDataType = {\n    bitcoin?: {\n        btc?: number\n        eth?: number\n        usd?: number\n    }\n    ethereum?: {\n        btc?: number\n        eth?: number\n        usd?: number\n    }\n    dollar?: {\n        btc?: number\n        eth?: number\n        usd?: number\n    }\n}\n\nexport const API = {\n    getPrice(id: string, idVs: string) {\n        return instance.get<GetPriceDataType>(`simple/price?ids=${id}&vs_currencies=${idVs}`)\n            .then(res => res.data as GetPriceDataType)\n    },\n    getBTCHistory(date: string){\n        return instance.get<HistoryDataType>(`coins/bitcoin/history?date=${date}&localization=false`)\n            .then(res => res.data as HistoryDataType)\n    },\n    getETHHistory(date: string){\n        return instance.get<HistoryDataType>(`coins/ethereum/history?date=${date}&localization=false`)\n            .then(res => res.data as HistoryDataType)\n    }\n}\n\nexport type HistoryDataType = {\n    id: string\n    symbol: string,\n    name: string,\n    image: {\n        thumb: string,\n        small: string\n    },\n    market_data: {\n        current_price: CurrentPriceType\n    }\n}\ntype CurrentPriceType = any","import {ThemeEnum, ThemeI} from '../types/styledTypes'\nimport {DefaultTheme} from 'styled-components'\n\n//ThemeI - static theme\n//DefaultTheme - dynamic theme\n\nexport const baseTheme: ThemeI = {\n    colors: {\n        primary: '#7986CB',\n        secondary: '#2B2B2B',\n        success: '#4CAF50',\n        danger: '#F44446',\n\n        bg: '#E8E7EC',\n        font: '#19191B'\n    },\n    media: {\n        lg: '(max-width: 1140px)',\n        md: '(max-width: 960px)',\n        sm: '(max-width: 720px)',\n        xs: '(max-width: 540px)'\n    }\n}\n\nexport const lightTheme: DefaultTheme = {\n    ...baseTheme,\n    type: ThemeEnum.light,\n    colors: {\n        ...baseTheme.colors,\n        bg: '#E5E4E8',\n        font: '#19191B'\n    }\n}\n\nexport const darkTheme: DefaultTheme = {\n    ...baseTheme,\n    type: ThemeEnum.dark,\n    colors: {\n        ...baseTheme.colors,\n        bg: '#19191B',\n        font: '#E5E4E8'\n    }\n}","import {API, GetPriceDataType, HistoryDataType} from './API'\nimport {Action, applyMiddleware, compose, createStore} from 'redux'\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {DefaultTheme} from 'styled-components'\nimport {darkTheme, lightTheme} from '../styles/theme'\nimport {ThemeEnum} from \"../types/styledTypes\";\n\nlet initialState = {\n    amount1: 1 as number,\n    amount2: 1 as number,\n    value: {} as GetPriceDataType,\n    historyBTCValues: [] as Array<number>,\n    historyETHValues: [] as Array<number>,\n    newHistoryValues: [] as Array<number>,\n    usd: 1 as number,\n    theme: lightTheme as DefaultTheme\n}\n\nexport type InitialStateType = typeof initialState\n\nconst REDUX = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    const insert = (arr: Array<number>, index: number, newItem: number) => [\n        ...arr.slice(0, index), newItem, ...arr.slice(index)\n    ]\n    switch (action.type) {\n        case 'COINS/SET_PRICE':\n            return {\n                ...state,\n                value: action.data\n            }\n        case 'COINS/SET_AMOUNT1':\n            return {\n                ...state,\n                amount1: action.amount\n            }\n        case 'COINS/SET_AMOUNT2':\n            return {\n                ...state,\n                amount2: action.amount\n            }\n        case 'COINS/SET_BTC_HISTORY':\n            state.usd = action.data.market_data.current_price.valuesOf(action.data.market_data.current_price.usd) as number\n            state.newHistoryValues = insert(state.historyBTCValues, action.id, state.usd)\n            return {\n                ...state,\n                ...action.data,\n                historyBTCValues: state.newHistoryValues\n            }\n        case 'COINS/SET_ETH_HISTORY':\n            state.usd = action.data.market_data.current_price.valuesOf(action.data.market_data.current_price.usd) as number\n            state.newHistoryValues = insert(state.historyETHValues, action.id, state.usd)\n            return {\n                ...state,\n                ...action.data,\n                historyETHValues: state.newHistoryValues\n            }\n        case 'COINS/TOGGLE_THEME':\n            let isLightTheme = state.theme.type === ThemeEnum.light\n            return {\n                ...state,\n                theme: isLightTheme ? darkTheme : lightTheme\n            }\n        default:\n            return state;\n    }\n}\n\n//ACTION\ntype ActionsType = InferActionsType<typeof actions>\n\nexport const actions = {\n    setPrice: (data: GetPriceDataType) => ({type: 'COINS/SET_PRICE', data} as const),\n    setAmount1: (amount: number) => ({type: 'COINS/SET_AMOUNT1', amount} as const),\n    setAmount2: (amount: number) => ({type: 'COINS/SET_AMOUNT2', amount} as const),\n    setBTCHistory: (data: HistoryDataType, id: number) => ({type: 'COINS/SET_BTC_HISTORY', data, id} as const),\n    setETHHistory: (data: HistoryDataType, id: number) => ({type: 'COINS/SET_ETH_HISTORY', data, id} as const),\n    toggleTheme: () => ({type: 'COINS/TOGGLE_THEME'} as const)\n}\n//THUNK\nexport const getPrice = (id: string, idVs: string): BaseThunkType<ActionsType> =>\n    async (dispatch) => {\n        let data = await API.getPrice(id, idVs);\n        dispatch(actions.setPrice(data));\n    }\nexport const getBTCHistory = (date: string, id: number): BaseThunkType<ActionsType> =>\n    async (dispatch) => {\n        let data = await API.getBTCHistory(date);\n        dispatch(actions.setBTCHistory(data, id));\n    }\nexport const getETHHistory = (date: string, id: number): BaseThunkType<ActionsType> =>\n    async (dispatch) => {\n        let data = await API.getETHHistory(date);\n        dispatch(actions.setETHHistory(data, id));\n    }\n\n//STORE\ntype RootReducerType = typeof REDUX;\nexport type AppStateType = ReturnType<RootReducerType>;\nexport type InferActionsType<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n\nconst store = createStore(REDUX, compose(applyMiddleware(thunkMiddleware)))\n\nexport default store","import styled, {css} from 'styled-components'\nimport {ThemeType} from '../types/styledTypes'\n\nexport const container = css`\n  position: relative;\n  margin-top: 0.3em;\n  padding: 0.5em 1em;\n  width: 20em;\n  border-radius: 1em;\n`\n\nexport const paper = css`\n  border-radius: 1em;\n  background-color: #FFFFFFEE;  \n`\n\nexport const Container = styled.div<ThemeType>`\n  ${container};\n  padding-top: 2em;\n  height: 5em;\n  color: ${props => props.font};\n  background-color: ${props => props.bg};\n`\nexport const SecondaryText = styled.p`\n  opacity: 0.7;\n  margin-bottom: 0.3em;\n`\n\nexport const Content = styled.div`\n  position: absolute;  \n  top: 3em;\n  width: 100%;\n  ${paper}\n`\n\nexport const Section = styled.div`\n  position: absolute; \n  left: 7em;\n  text-align: left;\n`\n\nexport const Aside = styled.div`\n  position: absolute;\n  left: 38%;\n  width: 40%;\n`\nexport const ChartContainer = styled.div`\n  position: relative;\n  margin-top: 2.6em;\n  padding: 30px 20px;\n  width: 20em;\n  height: 23.4em;\n  box-sizing: border-box;\n  ${paper}\n`\n\nexport const Button = styled.button`\n  border: none;\n  background-color: inherit;\n`\n\nexport const Link = styled.a`\n  text-decoration: none;\n`\n\nexport const Icon = styled.img<{ src: string }>`\n  display: inline;\n  width: 30px;\n  height: 30px;\n`\n\nexport const IconFont = styled.img<{ src: string }>`\n  display: inline;\n  width: 15px;\n  height: 15px;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nexport const SVG: React.FC<PropsType> = (props) => {\n    let d = ''\n    let d2 = ''\n    switch (props.id) {\n        case 'logo':\n            d = paths[0]\n            d2 = paths[1]\n            break\n        case 'portfolio':\n            d = paths[2]\n            break\n        case 'converter':\n            d = paths[3]\n            break\n        case 'theme':\n            d = paths[4]\n            break\n        case 'btc':\n            d = paths[5]\n            d2 = paths[6]\n            break\n        case 'eth':\n            d = paths[7]\n            break\n        case 'usd':\n            d = paths[8]\n            break\n    }\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\">\n        <Path d={d} fill={props.fill}/>\n        {d2.length > 0 && <Path d={d2} fill={props.fill}/>}\n    </svg>\n}\n\nconst paths = [\n    // 0 - logo d1\n    \"M12 22c5.421 0 10-4.579 10-10S17.421 2 12 2 2 6.579 2 12s4.579 10 10 10zm0-18c4.337 0 8 3.663 \" +\n    \"8 8s-3.663 8-8 8-8-3.663-8-8 3.663-8 8-8z\",\n    // 1 - logo d2\n    \"M12 17c.901 0 2.581-.168 3.707-1.292l-1.414-1.416C13.85 14.735 12.992 15 12 15c-1.626 0-3-1.374-3-3s1.374-3 \" +\n    \"3-3c.993 0 1.851.265 2.293.707l1.414-1.414C14.582 7.168 12.901 7 12 7c-2.757 0-5 2.243-5 5s2.243 5 5 5z\",\n    // 2 - portfolio\n    \"M20 6h-3V4c0-1.103-.897-2-2-2H9c-1.103 0-2 .897-2 2v2H4c-1.103 0-2 .897-2 2v11c0 1.103.897 2 2 2h16c1.103 0 \" +\n    \"2-.897 2-2V8c0-1.103-.897-2-2-2zm-4 2v11H8V8h8zm-1-4v2H9V4h6zM4 8h2v11H4V8zm14 11V8h2l.001 11H18z\",\n    // 3 - converter\n    \"M10 11H7.101l.001-.009a4.956 4.956 0 0 1 .752-1.787 5.054 5.054 0 0 1 2.2-1.811c.302-.128.617-.226.938-.291a5.078 \" +\n    \"5.078 0 0 1 2.018 0 4.978 4.978 0 0 1 2.525 1.361l1.416-1.412a7.036 7.036 0 0 0-2.224-1.501 6.921 6.921 0 0 \" +\n    \"0-1.315-.408 7.079 7.079 0 0 0-2.819 0 6.94 6.94 0 0 0-1.316.409 7.04 7.04 0 0 0-3.08 2.534 6.978 6.978 0 0 \" +\n    \"0-1.054 2.505c-.028.135-.043.273-.063.41H2l4 4 4-4zm4 2h2.899l-.001.008a4.976 4.976 0 0 1-2.103 3.138 4.943 4.943 \" +\n    \"0 0 1-1.787.752 5.073 5.073 0 0 1-2.017 0 4.956 4.956 0 0 1-1.787-.752 5.072 5.072 0 0 1-.74-.61L7.05 16.95a7.032 \" +\n    \"7.032 0 0 0 2.225 1.5c.424.18.867.317 1.315.408a7.07 7.07 0 0 0 2.818 0 7.031 7.031 0 0 0 4.395-2.945 6.974 6.974 \" +\n    \"0 0 0 1.053-2.503c.027-.135.043-.273.063-.41H22l-4-4-4 4z\",\n    // 4 - theme\n    \"M9 20h6v2H9zm7.906-6.288C17.936 12.506 19 11.259 19 9c0-3.859-3.141-7-7-7S5 5.141 5 9c0 2.285 1.067 3.528 2.101 \" +\n    \"4.73.358.418.729.851 1.084 1.349.144.206.38.996.591 1.921H8v2h8v-2h-.774c.213-.927.45-1.719.593-1.925.352-.503.726-.94 \" +\n    \"1.087-1.363zm-2.724.213c-.434.617-.796 2.075-1.006 3.075h-2.351c-.209-1.002-.572-2.463-1.011-3.08a20.502 20.502 \" +\n    \"0 0 0-1.196-1.492C7.644 11.294 7 10.544 7 9c0-2.757 2.243-5 5-5s5 2.243 5 5c0 1.521-.643 2.274-1.615 \" +\n    \"3.413-.373.438-.796.933-1.203 1.512z\",\n    // 5 - bitcoin d1\n    \"m11.953 8.819-.547 2.19c.619.154 2.529.784 2.838-.456.322-1.291-1.673-1.579-2.291-1.734zm-.822 3.296-.603 \" +\n    \"2.415c.743.185 3.037.921 3.376-.441.355-1.422-2.029-1.789-2.773-1.974z\",\n    // 6 - bitcoin d2\n    \"M14.421 2.299C9.064.964 3.641 4.224 2.306 9.581.97 14.936 4.23 20.361 9.583 21.697c5.357 1.335 10.783-1.924 \" +\n    \"12.117-7.281 1.336-5.356-1.924-10.781-7.279-12.117zm1.991 8.275c-.145.974-.686 1.445-1.402 1.611.985.512 1.485 \" +\n    \"1.298 1.009 2.661-.592 1.691-1.998 1.834-3.87 1.48l-.454 1.82-1.096-.273.447-1.794a44.624 44.624 0 0 \" +\n    \"1-.875-.228l-.449 1.804-1.095-.275.454-1.823c-.257-.066-.517-.136-.782-.202L6.87 \" +\n    \"15l.546-1.256s.808.215.797.199c.311.077.448-.125.502-.261l.719-2.875.115.029a.864.864 0 0 \" +\n    \"0-.114-.037l.512-2.053c.013-.234-.066-.528-.511-.639.018-.011-.797-.198-.797-.198l.291-1.172 \" +\n    \"1.514.378-.001.005c.227.057.461.111.7.165l.449-1.802 1.097.273-.44 1.766c.294.067.591.135.879.207l.438-1.755 \" +\n    \"1.097.273-.449 1.802c1.384.479 2.396 1.195 2.198 2.525z\",\n    // 7 - ethereum\n    \"M11.944 17.97L4.58 13.62 11.943 24l7.37-10.38-7.372 4.35h.003zM12.056 0L4.69 12.223l7.365 4.354 7.365-4.35L12.056 0z\",\n    // 8 - usd\n    \"M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm1 \" +\n    \"14.915V18h-2v-1.08c-2.339-.367-3-2.002-3-2.92h2c.011.143.159 1 2 1 1.38 0 2-.585 2-1 0-.324 0-1-2-1-3.48 \" +\n    \"0-4-1.88-4-3 0-1.288 1.029-2.584 3-2.915V6.012h2v1.109c1.734.41 2.4 1.853 2.4 2.879h-1l-1 .018C13.386 9.638 \" +\n    \"13.185 9 12 9c-1.299 0-2 .516-2 1 0 .374 0 1 2 1 3.48 0 4 1.88 4 3 0 1.288-1.029 2.584-3 2.915z\"\n]\n\nexport const Path = styled.path<{ fill: string }>`\n  color: ${props => props.fill}\n`\ntype PropsType = {\n    fill: string\n    id: 'logo' | 'theme' | 'portfolio' | 'converter' | 'btc' | 'eth' | 'usd'\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {actions, AppStateType} from './REDUX'\nimport styled from 'styled-components'\nimport {Button, Link} from '../styles/components'\nimport {ThemeType} from '../types/styledTypes'\nimport {SVG} from './assets/SVG'\n\nconst Header: React.FC = () => {\n    const theme = useSelector((state: AppStateType) => state.theme)\n    let bg = theme.colors.bg\n    let font = theme.colors.font\n    const dispatch = useDispatch()\n    const toggleTheme = () => {\n        dispatch(actions.toggleTheme())\n    }\n    return <header>\n        <SideBar bg={font} font={bg}>\n            <SideBarItem><SVG id='logo' fill={bg}/></SideBarItem>\n            <SideBarItem><Button onClick={toggleTheme}><SVG id='theme' fill={bg}/></Button></SideBarItem>\n            <SideBarItem><Link><NavLink to='/converter'><SVG id='converter' fill={bg}/></NavLink></Link></SideBarItem>\n            <SideBarItem><Link><NavLink to='/portfolio'><SVG id='portfolio' fill={bg}/></NavLink></Link></SideBarItem>\n        </SideBar>\n    </header>\n}\n\nexport default Header\n\nconst SideBar = styled.div<ThemeType>`\n  position: absolute;\n  margin: 3vh;\n  height: 94vh;\n  width: 4em;\n  border-radius: 2em;\n  color: ${props => props.font};\n  background-color: ${props => props.bg};\n`\n\nconst SideBarItem = styled.div`\n  margin: 2em 1em 1em 1em;\n  opacity: 0.8;\n  &:hover, &:active {\n    opacity: 1;\n  }\n`","import React from 'react'\nimport {ArcElement, Chart as ChartJS, Legend, Tooltip} from 'chart.js'\nimport {Doughnut} from 'react-chartjs-2'\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const data = {\n    labels: ['BTC', 'ETH', 'USD'],\n    datasets: [\n        {\n            label: '# of Votes',\n            data: [12, 19, 3],\n            // color2 of CoinItem, DE opacity\n            backgroundColor: [\n                '#BCD9FFDE',\n                '#FCF9D9DE',\n                '#A7E6BADE'\n            ],\n            borderColor: [\n                '#BCD9FFDE',\n                '#FCF9D9DE',\n                '#A7E6BADE'\n            ],\n            borderWidth: 1,\n        },\n    ],\n};\n\nexport const PieChart: React.FC = () => {\n    return <Doughnut data={data} />\n}","import styled from 'styled-components'\n\nexport const SmallPie = styled.div/*<{deg: number}>*/`\n  --p: 80;\n  --b: 5px;\n  --w: 40px;\n  --c: #FFFFFFEE;\n  position: absolute;\n  right: 1em;\n  top: 40%;\n  transform: translate(0, -40%);\n  display: inline-grid;\n  margin: 5px;\n  width: var(--w);\n  place-content: center; // is it need?\n  aspect-ratio: 1;\n  animation: p 1s 0.5s both;\n  @keyframes p {\n    from {--p: 0}\n  }\n  :before, :after {\n    content: '';\n    position: absolute;\n    border-radius: 50%;\n  }\n  // rounded first end\n  :before {\n    inset: 0;\n    background: \n            radial-gradient(farthest-side, \n            var(--c)98%, #0000) top/var(--b) var(--b) no-repeat, \n            conic-gradient(var(--c) calc(var(--p)*1%), #0000 0);\n    -webkit-mask: radial-gradient(farthest-side, #0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));\n    mask: radial-gradient(farthest-side, #0000 calc(99% - var(--b)),#000 calc(100% - var(--b)));\n  }\n  // rounded second end\n  :after {\n    inset: calc(50% - var(--b)/2);\n    background: var(--c);\n    transform: rotate(calc(var(--p)*3.6deg)) translateY(calc(50% - var(--w)/2));\n  }\n`","import React from 'react'\nimport '../../styles/style.css'\nimport {PieChart} from './Pie'\nimport {Aside, ChartContainer, Container, container, Content, SecondaryText, Section} from '../../styles/components'\nimport styled from 'styled-components'\nimport {SVG} from '../assets/SVG'\nimport {useSelector} from 'react-redux'\nimport {AppStateType} from '../REDUX'\nimport {SmallPie} from './SmallPie'\n\nconst Portfolio: React.FC = React.memo(() => {\n    const theme = useSelector((state: AppStateType) => state.theme)\n    let bg = theme.colors.bg\n    let font = theme.colors.font\n    return <Content>\n        <Section>\n            <h1>Wallet</h1>\n            <Container bg={font} font={bg}>\n                <h5><SecondaryText>Total balance</SecondaryText></h5>\n                <h2><SVG id='usd' fill={bg}/> 9866660</h2>\n            </Container>\n            <CoinItem id='btc' name='BTC Bitcoin' color1='#A1DFB3' color2='#BCD9FF'/>\n            <CoinItem id='eth' name='ETH Ethereum' color1='#DDCDCC' color2='#FCF9D9'/>\n            <CoinItem id='usd' name='USD US Dollar' color1='#DCD9D9' color2='#A7E6BA'/>\n        </Section>\n        <Aside>\n            <ChartContainer>\n                <PieChart/>\n            </ChartContainer>\n        </Aside>\n    </Content>\n})\n\nconst CoinItem: React.FC<CoinItemType & CoinItemTypeS> = (props) => {\n    return <CoinItemS color1={props.color1} color2={props.color2}>\n        <SmallPie />\n        <h4>{props.name}</h4>\n        <h2><SVG id={props.id} fill='#FFFFFF'/> 9866660</h2>\n    </CoinItemS>\n}\n\nexport default Portfolio\n\nconst CoinItemS = styled.div<CoinItemTypeS>`\n  ${container};\n  height: 4em;\n  color: #FFFFFF;\n  background: linear-gradient(to right, ${props => props.color1}, ${props => props.color2});\n`\n\ntype CoinItemTypeS = {\n    color1: string\n    color2: string\n}\ntype CoinItemType = {\n    name: string\n    id: \"logo\" | \"theme\" | \"portfolio\" | \"converter\" | \"btc\" | \"eth\" | \"usd\"\n}","import React from 'react'\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js'\nimport { Line } from 'react-chartjs-2'\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport const options = {\n    responsive: true,\n    interaction: {\n        mode: 'index' as const,\n        intersect: false,\n    },\n    stacked: false,\n    plugins: {\n        title: {\n            display: true,\n            text: 'Exchange rate to USD',\n        },\n    },\n    scales: {\n        y: {\n            type: 'linear' as const,\n            display: true,\n            position: 'left' as const,\n        },\n        y1: {\n            type: 'linear' as const,\n            display: true,\n            position: 'right' as const,\n            grid: {\n                drawOnChartArea: false,\n            },\n        },\n    },\n};\n\n\nconst thisDay = new Date()\n// @ts-ignore\nconst today = Date.parse(thisDay)\nconst day = 86400000\nconst months = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\nconst milliseconds = [today-6*day, today-5*day, today-4*day, today-3*day, today-2*day, today-day, today];\nconst dates = milliseconds.map(m => new Date(m))\n//const requestDates = dates.map(d => d.getDate() + '-' + d.getMonth() + '-' + d.getFullYear())\nconst labels = dates.map(d => '' + d.getDate() + ' ' + months[d.getMonth()] + '')\n\n\nexport const Chart: React.FC = () => {\n//    const dispatch = useDispatch()\n//    useEffect (() => {\n//        dispatch(getBTCHistory(requestDates[0], 0))\n//        dispatch(getBTCHistory(requestDates[1], 1))\n//        dispatch(getBTCHistory(requestDates[2], 2))\n//        dispatch(getBTCHistory(requestDates[3], 3))\n//        dispatch(getBTCHistory(requestDates[4], 4))\n//        dispatch(getBTCHistory(requestDates[5], 5))\n//        dispatch(getBTCHistory(requestDates[6], 6))\n//    }, [dispatch])\n//    const historyBTCValues = useSelector((state: AppStateType) => state.historyBTCValues)\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'BTC',\n                data: [15, 10, 26, 8, 0, 18, 6],//[historyBTCValues]\n                borderColor: 'rgb(53, 162, 235)',\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                yAxisID: 'y',\n            },\n            {\n                label: 'ETH',\n                data: [6, 18, 0, 8, 26, 10, 15],\n                borderColor: 'rgb(255, 206, 86)',\n                backgroundColor: 'rgba(255, 206, 86, 0.5)',\n                yAxisID: 'y1',\n            },\n        ],\n    }\n\n    return <Line options={options} data={data}/>;\n}","import React from 'react'\nimport {Field, Form, Formik} from 'formik'\n\ntype PropsType = {\n    amount: number\n    changeAmount: (amount: number) => void\n}\n\nexport const AmountForm: React.FC<PropsType> = (props) => {\n    const submit = (values: {amount: number}, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        props.changeAmount(values.amount)\n        setSubmitting(false);\n    }\n\n    return <div>\n        <Formik initialValues={{amount: props.amount}} onSubmit={submit}>\n            {({isSubmitting}) => (\n                <Form>\n                    <Field type='text' name='amount'/>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        +\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/bitcoin.a256dd67.svg\";","import btc from './bitcoin.svg'\n\nimport usd from './dollar.svg'\n\nconst icons = [\n    btc,\n    btc,\n    usd\n]\n\nexport default icons","export default __webpack_public_path__ + \"static/media/dollar.39ac4cc0.svg\";","import React from 'react'\nimport {Field, Form, Formik} from 'formik'\n\nexport const SelectUnit: React.FC = () => {\n    const submit = (values: OwnFormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        setSubmitting(false);\n    }\n    return <div>\n        <Formik initialValues={{id: ''}} onSubmit={submit}>\n            {({isSubmitting}) => (\n                <Form>\n                    <Field type='text' name='amount'/>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        convert\n                    </button>\n                </Form>\n            )}\n        </Formik>\n        {/*<div className='b c'>\n        <div className='a-row'>\n            <div className='a' name='bitcoin'>{'\\u20BF'}</div>\n            <div className='a' name='ethereum'>{'\\u29EB'}</div>\n            <div className='a' name='dollar'>{'\\u0024'}</div>\n        </div>\n        <button className='button c-toggle' onSubmit={hide}>{'\\u005E'}</button>\n    </div>*/}\n    </div>\n}\n\ntype OwnFormType = {\n    id: string\n}","import React, {useState} from 'react'\nimport {AmountForm} from './AmountForm'\nimport icons from '../assets/icons'\nimport {SelectUnit} from './SelectUnit'\nimport { Icon, IconFont } from '../../styles/components'\n\nconst ConverterUnit: React.FC<ConverterType> = (props) => {\n    const [isOptionsVisible, setOptionsVisible] = useState(false)\n    const show = () => {\n        setOptionsVisible(true)\n    }\n    const hide = () => {\n        //todo: set current currency\n        setOptionsVisible(false)\n    }\n    const rate = props.rate ? props.rate : 1\n    if (!isOptionsVisible) {\n        return <div>\n            <div>\n                <Icon src={props.icon}/> {props.name}, <IconFont src={props.icon} alt='...'/>\n                1 = {rate}<IconFont src={icons[2]} alt='...'/></div>\n            <IconFont src={props.icon} alt='...'/>\n            <div>\n                {props.changeAmount ?\n                    <AmountForm amount={props.amount} changeAmount={props.changeAmount}/> :\n                    <div>{props.amount}</div>}\n            </div>\n            <button onClick={show}>{'\\u2304'}</button>\n        </div>\n    } else return <SelectUnit/>\n}\n\nexport default ConverterUnit\n\ntype ConverterType = {\n    icon: string\n    name: string\n    rate?: number | null | undefined\n    amount: number\n    changeAmount?: (amount: number) => void\n}","import React, {useEffect, useState} from 'react'\nimport '../../styles/style.css'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {actions, AppStateType, getPrice} from '../REDUX'\nimport {Chart} from './Chart'\nimport ConverterUnit from './ConverterUnit'\nimport icons from '../assets/icons'\nimport {Aside, Content, Section} from '../../styles/components'\n\nconst Converter: React.FC = React.memo(() => {\n\n    //todo: keep it in reducer. Id of currency to change options in converter\n    const [id, setId] = useState('bitcoin' as string)\n    const [idVs, setIdVs] = useState('usd' as string)\n\n    const data = useSelector((state: AppStateType) => state.value)\n    const amount1 = useSelector((state: AppStateType) => state.amount1)\n    const amount2 = useSelector((state: AppStateType) => state.amount2)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getPrice(id, idVs))\n    }, [id, idVs, dispatch])\n\n    let rates = Object.values(data.bitcoin ? data.bitcoin : data.ethereum ? data.ethereum : data.dollar ? data.dollar : {})\n    let rate = rates[0]\n\n    useEffect(()=>{\n        const amount = amount1 ? amount1 * rate : 1\n        dispatch(actions.setAmount2(amount))\n    },  [rate, amount1, dispatch])\n\n    const changeAmount = (amount: number) => {\n        dispatch(actions.setAmount1(amount))\n    }\n    const icon1 = icons[0]\n    const icon2 = icons[2]\n\n    return <Content>\n        <Section>\n            <ConverterUnit icon={icon1} name='BTC' amount={amount1} changeAmount={changeAmount} rate={rate} />\n            <ConverterUnit icon={icon2} name='BTC' amount={amount2}/>\n        </Section>\n        <Aside><Chart/></Aside>\n    </Content>\n})\n\nexport default Converter","import {createGlobalStyle} from 'styled-components'\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  body {\n    margin: 0;\n    text-align: center;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  svg {\n    position: relative;\n    top: 3px;\n  }\n`","import React from 'react'\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\nimport {Provider, useSelector} from 'react-redux'\nimport store, {AppStateType} from './components/REDUX'\nimport Header from './components/Header'\nimport Portfolio from './components/Portfolio/Portfolio'\nimport Converter from './components/Converter/Converter'\nimport GlobalStyles from './styles/global'\nimport styled, {ThemeProvider} from 'styled-components'\nimport {ThemeType} from \"./types/styledTypes\";\n\nconst App: React.FC = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <ThemeProvider theme={store.getState().theme}>\n                <AppWrapper/>\n                <GlobalStyles/>\n            </ThemeProvider>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default App\n\nconst AppWrapper: React.FC = () => {\n    const theme = useSelector((state: AppStateType) => state.theme)\n    return <Wrapper font={theme.colors.font} bg={theme.colors.bg}>\n        <Header/>\n        <Routes>\n            <Route path='/' element={<Portfolio/>}/>\n            <Route path='/portfolio' element={<Portfolio/>}/>\n            <Route path='/converter/*' element={<Converter/>}/>\n        </Routes>\n    </Wrapper>\n}\n\nconst Wrapper = styled.div<ThemeType>`\n  height: 100vh;\n  color: ${props => props.font};\n  background-color: ${props => props.bg};\n`","import React from 'react'\nimport reportWebVitals from './reportWebVitals'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()"],"sourceRoot":""}